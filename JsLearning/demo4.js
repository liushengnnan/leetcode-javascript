// # 静态作用域与动态作用域
// 因为 JavaScript 采用的是词法作用域(静态作用域)，函数的作用域在函数定义的时候就决定了。

// 而与词法作用域相对的是动态作用域，函数的作用域是在函数调用的时候才决定的。

// JavaScript采用的是词法作用域，函数的作用域基于函数创建的位置

var value = 1;

function foo() {
    console.log(value);
}

function bar() {
    var value = 2;
    foo();
}

bar();

// 结果是 ??? :  1


// 假设JavaScript采用静态作用域，让我们分析下执行过程：

// 执行 foo 函数，先从 foo 函数内部查找是否有局部变量 value，如果没有，就根据** 书写的位置 **，查找上面一层的代码，也就是 value 等于 1，所以结果会打印 1。

// 假设JavaScript采用动态作用域，让我们分析下执行过程：

// 执行 foo 函数，依然是从 foo 函数内部查找是否有局部变量 value。如果没有，就从** 调用函数的作用域 **，也就是 bar 函数内部查找 value 变量，所以结果会打印 2。